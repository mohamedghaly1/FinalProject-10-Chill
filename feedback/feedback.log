2025-05-13 07:54:30 - c.c.f.FeedbackMicroserviceApplication - Starting FeedbackMicroserviceApplication using Java 23 with PID 27536 (D:\MET\Semester 10\[CSEN1002] Scalable\Project\Final Project\FinalProject-10-Chill\feedback\target\classes started by mazen in D:\MET\Semester 10\[CSEN1002] Scalable\Project\Final Project\FinalProject-10-Chill\feedback)
2025-05-13 07:54:30 - c.c.f.FeedbackMicroserviceApplication - No active profile set, falling back to 1 default profile: "default"
2025-05-13 07:54:31 - o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-05-13 07:54:31 - o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 133 ms. Found 1 MongoDB repository interface.
2025-05-13 07:54:31 - o.s.cloud.context.scope.GenericScope - BeanFactory id=c2c1266e-ea35-3402-b301-d42dcfbdbf32
2025-05-13 07:54:31 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8082 (http)
2025-05-13 07:54:31 - o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8082"]
2025-05-13 07:54:31 - o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-05-13 07:54:31 - o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.40]
2025-05-13 07:54:31 - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-05-13 07:54:31 - o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1443 ms
2025-05-13 07:54:32 - org.mongodb.driver.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.lambda$open$0(SocketStream.java:85)
	at java.base/java.util.Optional.orElseThrow(Optional.java:403)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:85)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:233)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:219)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176)
Caused by: java.net.ConnectException: Connection refused: getsockopt
	at java.base/sun.nio.ch.Net.pollConnect(Native Method)
	at java.base/sun.nio.ch.Net.pollConnectNow(Net.java:682)
	at java.base/sun.nio.ch.NioSocketImpl.timedFinishConnect(NioSocketImpl.java:542)
	at java.base/sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:592)
	at java.base/java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327)
	at java.base/java.net.Socket.connect(Socket.java:760)
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:76)
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:104)
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:79)
	... 3 common frames omitted
2025-05-13 07:54:32 - org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=null, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6e807e2, com.mongodb.Jep395RecordCodecProvider@6c995c5d, com.mongodb.KotlinCodecProvider@203b953c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[localhost:27017], srvServiceName=mongodb, mode=SINGLE, requiredClusterType=UNKNOWN, requiredReplicaSetName='null', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=false, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-05-13 07:54:33 - o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-05-13 07:54:35 - o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-05-13 07:54:35 - o.s.c.n.e.c.DiscoveryClientOptionalArgsConfiguration - Eureka HTTP Client uses RestTemplate.
2025-05-13 07:54:35 - o.s.c.l.c.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger - Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.
2025-05-13 07:54:35 - o.s.c.n.eureka.InstanceInfoFactory - Setting initial instance status as: STARTING
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Initializing Eureka in region us-east-1
2025-05-13 07:54:35 - c.n.d.s.r.aws.ConfigClusterResolver - Resolving eureka endpoints via configuration
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Disable delta property : false
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Single vip registry refresh property : null
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Force full registry fetch : false
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Application is null : false
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Registered Applications size is zero : true
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Application version is -1: true
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Getting all instance registry info from the eureka server
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - The response status is 200
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Starting heartbeat executor: renew interval is: 30
2025-05-13 07:54:35 - c.n.discovery.InstanceInfoReplicator - InstanceInfoReplicator onDemand update allowed rate per min is 4
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Discovery Client initialized at timestamp 1747112075690 with initial instances count: 2
2025-05-13 07:54:35 - o.s.c.n.e.s.EurekaServiceRegistry - Registering application FEEDBACK-SERVICE with eureka with status UP
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1747112075695, current=UP, previous=STARTING]
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEEDBACK-SERVICE/localhost:feedback-service:8082: registering service...
2025-05-13 07:54:35 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8082 (http) with context path '/'
2025-05-13 07:54:35 - o.s.c.n.e.s.EurekaAutoServiceRegistration - Updating port to 8082
2025-05-13 07:54:35 - c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEEDBACK-SERVICE/localhost:feedback-service:8082 - registration status: 204
2025-05-13 07:54:36 - o.s.cloud.commons.util.InetUtils - Cannot determine local hostname
2025-05-13 07:54:36 - c.c.f.FeedbackMicroserviceApplication - Started FeedbackMicroserviceApplication in 7.952 seconds (process running for 8.746)
2025-05-13 07:54:36 - o.s.c.n.e.s.EurekaServiceRegistry - Unregistering application FEEDBACK-SERVICE with eureka with status DOWN
2025-05-13 07:54:36 - c.netflix.discovery.DiscoveryClient - Saw local status change event StatusChangeEvent [timestamp=1747112076744, current=DOWN, previous=UP]
2025-05-13 07:54:36 - c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEEDBACK-SERVICE/localhost:feedback-service:8082: registering service...
2025-05-13 07:54:36 - o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-05-13 07:54:36 - c.netflix.discovery.DiscoveryClient - DiscoveryClient_FEEDBACK-SERVICE/localhost:feedback-service:8082 - registration status: 204
2025-05-13 07:54:36 - o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-05-13 07:54:36 - c.netflix.discovery.DiscoveryClient - Shutting down DiscoveryClient ...
